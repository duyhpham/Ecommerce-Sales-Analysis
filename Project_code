Are Apple really that popular? 

1, Summary:
  In this project, I am going to analyze the relationships among conversion rate, brands, and prices of purchases in a local Ecommerce store. 
  The final result will look as followed:
  https://public.tableau.com/views/EcommerceSales_16638809427870/Dashboard1?:language=en-US&:display_count=n&:origin=viz_share_link


2, Data:
Data is imported from Kaggle: https://www.kaggle.com/datasets/mkechinov/ecommerce-behavior-data-from-multi-category-store

  !pip install -q kaggle
  from google.colab import files
  files.upload()
  ! mkdir ~/.kaggle
  ! cp kaggle.json ~/.kaggle/
  ! chmod 600 ~/.kaggle/kaggle.json
  ! kaggle datasets list
  !kaggle datasets download -d mkechinov/ecommerce-behavior-data-from-multi-category-store
  !unzip ecommerce-behavior-data-from-multi-category-store.zip

Data Summary:
  import pandas as pd
  ecommerce = pd.read_csv('2019-Nov.csv')
  print(ecommerce.head())
  print(ecommerce.info())
  
     event_time event_type  product_id          category_id  \
  0  2019-11-01 00:00:00 UTC       view     1003461  2053013555631882655   
  1  2019-11-01 00:00:00 UTC       view     5000088  2053013566100866035   
  2  2019-11-01 00:00:01 UTC       view    17302664  2053013553853497655   
  3  2019-11-01 00:00:01 UTC       view     3601530  2053013563810775923   
  4  2019-11-01 00:00:01 UTC       view     1004775  2053013555631882655   

                 category_code   brand   price    user_id  \
  0     electronics.smartphone  xiaomi  489.07  520088904   
  1  appliances.sewing_machine  janome  293.65  530496790   
  2                        NaN   creed   28.31  561587266   
  3  appliances.kitchen.washer      lg  712.87  518085591   
  4     electronics.smartphone  xiaomi  183.27  558856683   

                             user_session  
  0  4d3b30da-a5e4-49df-b1a8-ba5943f1dd33  
  1  8e5f4f83-366c-4f70-860e-ca7417414283  
  2  755422e7-9040-477b-9bd2-6a6e8fd97387  
  3  3bfb58cd-7892-48cc-8020-2f17e6de6e7f  
  4  313628f1-68b8-460d-84f6-cec7a8796ef2  
  <class 'pandas.core.frame.DataFrame'>
  RangeIndex: 67501979 entries, 0 to 67501978
  Data columns (total 9 columns):
   #   Column         Dtype  
  ---  ------         -----  
   0   event_time     object 
   1   event_type     object 
   2   product_id     int64  
   3   category_id    int64  
   4   category_code  object 
   5   brand          object 
   6   price          float64
   7   user_id        int64  
   8   user_session   object 
  dtypes: float64(1), int64(3), object(5)
  memory usage: 4.5+ GB
  None

As indicated in line 46, this dataset has over 67 million rows! But because are not many columns (9), I can summarize these quite easily.


3, Extract a list of most popular brands:
  i = dict(ecommerce['brand'].value_counts())
  most_popular = list(i.keys())
  most_popular.pop(9)
  most_popular.pop(11)
  most_popular = most_popular[0:13]
  print(most_popular)
  
  ['samsung', 'apple', 'xiaomi', 'huawei', 'lucente', 'lg', 'bosch', 'oppo', 'sony', 'lenovo', 'acer', 'artel', 'hp']


4, Create a function to extract all necessary data:
 
from numpy import mean
def getdata(brand):
    newtable = ecommerce[ecommerce['brand'] == brand]                                                             #Create a new table for each brand

    less_200 = newtable[newtable['price'] < 200]['event_type'].value_counts(normalize=True)                       #Extract conversion rate for <$200 items
    conversion_200 = (list(less_200)[2])*100                                                        

    less_500 = newtable[newtable['price'] < 500]['event_type'].value_counts(normalize=True)                       #Extract conversion rate for <$500 items
    conversion_500 = (list(less_500)[2])*100

    over_500 = newtable[newtable['price'] > 500]['event_type'].value_counts(normalize=True)                       #Extract conversion rate for >$500 items
    conversion_ov500 = (list(over_500)[2])*100

    avg_price = newtable['price'].mean()                                                                          #Extract average price
       
    total_customer = len(newtable.index)                                                                          #Extract total number of customers interested
    
    return [brand,conversion_500,conversion_500,conversion_ov500,avg_price,total_customer]                        #Return all the info as a list
   
   
5, Using the function we just created, create a list of list. Each list represents a brand and respective statistics.
  data = [getdata(i) for i in most_popular[0:13]]
  print(data)
  
  [['samsung', 2.8455553866798646, 2.8455553866798646, 1.4320552277497602, 356.1164579741155, 7889245], ['apple', 3.1408615972952183, 3.1408615972952183, 2.461220683192624, 826.2084054216878, 6259379], ['xiaomi', 1.5044617637735596, 1.5044617637735596, 0.27205016339598226, 203.7564489500138, 4638062], ['huawei', 1.858407368909634, 1.858407368909634, 0.5155856000858415, 263.9678170957774, 1410126], ['lucente', 1.2147448654130297, 1.2147448654130297, 1.407851342246179, 241.69732541822253, 1185075], ['lg', 1.3079196066943475, 1.3079196066943475, 0.836940836940837, 470.5084051449875, 1096990], ['bosch', 0.8680239901650437, 0.8680239901650437, 0.5541258509048648, 276.74781066581596, 975059], ['oppo', 2.055886810089651, 2.055886810089651, 0.5339493316166167, 300.0524999938401, 811698], ['sony', 1.4701473162315855, 1.4701473162315855, 0.7605166747748732, 441.8560924508146, 798457], ['lenovo', 1.206701721777729, 1.206701721777729, 0.48443870198924255, 560.23017345578, 727390], ['acer', 1.1349733268927682, 1.1349733268927682, 0.7663287244466809, 627.9519978082224, 698976], ['artel', 1.3901854653649295, 1.3901854653649295, 1.660795168595873, 177.4697217141541, 664281], ['hp', 1.0372392870686384, 1.0372392870686384, 0.3698977531538225, 493.2573493068816, 515352]]
 

6, From the list of list, creat a Panda DataFrame:

  final_data = pd.DataFrame(data)
  final_data.columns = ['brand','cvrate_<200','cvrate_<500','cvrate_>500','avg_price','total']
  
  Hooray! We are 50% of the way. The rest is just exporting the data into Tableau and visualize it!
  final_data.to_csv('Ecommercedata.csv')
  
  
